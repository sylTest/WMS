//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace THOK.Authority.Dal.EntityModels
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class RFIDWMSDBContainer : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“RFIDWMSDBContainer”部分中的连接字符串初始化新 RFIDWMSDBContainer 对象。
        /// </summary>
        public RFIDWMSDBContainer() : base("name=RFIDWMSDBContainer", "RFIDWMSDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 RFIDWMSDBContainer 对象。
        /// </summary>
        public RFIDWMSDBContainer(string connectionString) : base(connectionString, "RFIDWMSDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 RFIDWMSDBContainer 对象。
        /// </summary>
        public RFIDWMSDBContainer(EntityConnection connection) : base(connection, "RFIDWMSDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Company> Company集1
        {
            get
            {
                if ((_Company集1 == null))
                {
                    _Company集1 = base.CreateObjectSet<Company>("Company集1");
                }
                return _Company集1;
            }
        }
        private ObjectSet<Company> _Company集1;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<dd> dd集
        {
            get
            {
                if ((_dd集 == null))
                {
                    _dd集 = base.CreateObjectSet<dd>("dd集");
                }
                return _dd集;
            }
        }
        private ObjectSet<dd> _dd集;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Company集1 EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCompany集1(Company company)
        {
            base.AddObject("Company集1", company);
        }
    
        /// <summary>
        /// 用于向 dd集 EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTodd集(dd dd)
        {
            base.AddObject("dd集", dd);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFIDWMSDB", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Company 对象。
        /// </summary>
        /// <param name="companyID">CompanyID 属性的初始值。</param>
        /// <param name="companyName">CompanyName 属性的初始值。</param>
        /// <param name="companyType">CompanyType 属性的初始值。</param>
        /// <param name="property">Property 属性的初始值。</param>
        public static Company CreateCompany(global::System.Guid companyID, global::System.String companyName, global::System.String companyType, global::System.String property)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.CompanyName = companyName;
            company.CompanyType = companyType;
            company.Property = property;
            return company;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyType
        {
            get
            {
                return _CompanyType;
            }
            set
            {
                OnCompanyTypeChanging(value);
                ReportPropertyChanging("CompanyType");
                _CompanyType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyType");
                OnCompanyTypeChanged();
            }
        }
        private global::System.String _CompanyType;
        partial void OnCompanyTypeChanging(global::System.String value);
        partial void OnCompanyTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Property
        {
            get
            {
                return _Property;
            }
            set
            {
                OnPropertyChanging(value);
                ReportPropertyChanging("Property");
                _Property = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Property");
                OnPropertyChanged();
            }
        }
        private global::System.String _Property;
        partial void OnPropertyChanging(global::System.String value);
        partial void OnPropertyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFIDWMSDB", Name="dd")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dd : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 dd 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static dd Createdd(global::System.Int32 id)
        {
            dd dd = new dd();
            dd.ID = id;
            return dd;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
    }

    #endregion
    
}
